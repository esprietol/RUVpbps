% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_pbps.R
\name{gen_PBPS,SingleCellExperiment-method}
\alias{gen_PBPS,SingleCellExperiment-method}
\title{Generate a pseudobulk dataset with pseudobulk pseudosamples to be used as negative control samples in the removal of unwanted variation}
\usage{
\S4method{gen_PBPS}{SingleCellExperiment}(
  counts,
  ctype = "cg_cov",
  BioVar,
  NVar,
  id_pb = "sample_cell",
  id_sub = "ind_cov",
  cell_id = "cell_id",
  n = 2,
  Seed = NULL
)
}
\arguments{
\item{counts}{A \code{SingleCellExperiment} object with the single-cell counts and cell level metadata stored in the \code{colData} slot.}

\item{ctype}{A character string specifying the column in the \code{colData} \code{DataFrame} used to define the cell type.}

\item{BioVar}{A character vector specifying column names in the \code{colData} \code{DataFrame} with the biological variables (e.g., treatment).}

\item{NVar}{A character vector specifying column names in the \code{colData} \code{DataFrame} with technical/nuisance variables (e.g., batch ID).}

\item{id_pb}{A character string specifying the column in the \code{colData} \code{DataFrame} used as sample ID.}

\item{id_sub}{A character string specifying the column in the \code{colData} \code{DataFrame} used as "subject-level" ID (e.g., patient ID).}

\item{cell_id}{A character string indicating the column in the \code{colData} \code{DataFrame} used as cell ID.}

\item{n}{Number of pseudo-replicates to generate per group. Default is 1.}

\item{Seed}{Integer used to set the random seed for reproducibility.}
}
\value{
A list of \code{SummarizedExperiment} objects.
}
\description{
This function orchestrates the process of creating pseudobulk pseudosamples (PBPS) from a \code{SingleCellExperiment} object and associated metadata.
It combines sampling, aggregation, and metadata reconstruction, and returns a list, were each element is a  \code{SummarizedExperiment} object with the pseudobulk counts of a particular cell type.
}
\examples{

data(dummysce)

pbpsc <- gen_PBPS(dummysce, ctype='cg_cov', BioVar='cg_cov', NVar='Processing_Cohort', id_pb = 'sample_cell', id_sub = 'ind_cov', cell_id = 'cell_id', n = 1 )
}
